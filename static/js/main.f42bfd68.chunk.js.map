{"version":3,"sources":["components/SearchBar/SearchBar.js","services/imageApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["SearchBar","state","inputValue","handleChange","e","target","value","setState","handleSubmit","event","preventDefault","console","log","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","getFetch","query","page","url","axios","get","then","response","data","hits","ImageGalleryItem","webformatURL","id","onClick","src","alt","ImageGallery","showModal","largeImageUrl","map","item","largeImageURL","Button","fetchImages","App","color","height","width","Modal","removeE","key","onClose","window","addEventListener","removeEventListener","images","isOpen","closeModal","getQuery","imageApi","length","prev","catch","error","prevProps","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f42bfd68.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    let value = e.target.value;\r\n    this.setState({\r\n      inputValue: e.target.value,\r\n    })\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    console.log(this.props)\r\n    const{onSubmit}=this.props;\r\n    console.log(onSubmit)\r\n    const{inputValue}=this.state\r\n    onSubmit(inputValue)\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\nfunction getFetch(query, page) {\r\n  let key = `18650828-2cd427c2862082afea365d547`;\r\n  let perPage = 12;\r\n\r\n  let url = `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=${perPage}`;\r\n\r\n  return axios.get(url).then((response) => {\r\n    console.log(response.data.hits);\r\n    return response.data.hits;\r\n  });\r\n}\r\n\r\nexport default { getFetch };\r\n","import React from \"react\";\r\n\r\nfunction ImageGalleryItem({ webformatURL, id, type, onClick}) {\r\n  return (\r\n    <li key={id}>\r\n      <img src={webformatURL} alt={type}  onClick={onClick}/>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nfunction ImageGallery({ props, showModal, largeImageUrl }) {\r\n  // console.log(props);\r\n\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {props.map((item) => {\r\n        // console.log(item);\r\n        return (\r\n          <ImageGalleryItem\r\n            id={item.id}\r\n            webformatURL={item.webformatURL}\r\n            type={item.type}\r\n            onClick={() => showModal(item.largeImageURL)}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Button extends Component {\r\n  render() {\r\n    return(\r\n      <>\r\n    <button type=\"button\" onClick={this.props.fetchImages}>Load more...</button>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button;","import Loader from \"react-loader-spinner\";\r\nimport React, { Component } from \"react\";\r\nexport default class App extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#00BFFF\"\r\n        height={30}\r\n        width={30} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.removeE)\r\n  }\r\n  componentWillUnmount(){\r\n    window.removeEventListener('keydown', this.removeE)\r\n  }\r\n  removeE = (e) => {\r\n    if(e.key === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n\r\n        <div className=\"Overlay\">\r\n          <div className=\"Modal\">\r\n            <img src={this.props.largeImageUrl} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar/SearchBar.js\";\nimport imageApi from \"./services/imageApi.js\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery.js\";\nimport ImageGalleryItem from \"./components/ImageGalleryItem/ImageGalleryItem\";\nimport Button from \"./components/Button/Button.js\";\nimport Loader from \"./components/Loader/Loader.js\";\nimport Modal from \"./components/Modal/Modal\";\n\nclass App extends Component {\n  state = {\n    query: \"\",\n    page: 1,\n    images: [],\n    isOpen: false,\n    largeImageUrl: \"\",\n  };\n  componentDidMount() {\n    console.log(\"mount\");\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"update\");\n    if (prevState.query !== this.state.query) {\n      this.fetchImages();\n    }\n\n    if (this.state.images !== prevState.images) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  closeModal = () => {\n    this.setState({isOpen: false })\n  }\n\n  componentWillUnmount() {}\n  getQuery = (value) => {\n    this.setState({\n      query: value,\n    });\n  };\n  fetchImages = () => {\n    const { query, page } = this.state;\n    imageApi\n      .getFetch(query, page)\n      .then((data) => {\n        console.log(data);\n        if (data.length > 0) {\n          this.setState((prev) => ({\n            images: [...prev.images, ...data],\n            page: prev.page + 1,\n          }));\n        }\n      })\n      .catch((error) => console.log(error));\n  };\n  showModal = (largeImageUrl) => {\n    this.setState({ isOpen: true, largeImageUrl: largeImageUrl,});\n  };\n\n  render() {\n    return (\n      <>\n        <h2> ImageFinder </h2>\n        <SearchBar onSubmit={this.getQuery} />\n        <ImageGallery props={this.state.images} showModal={this.showModal} />\n        <Button fetchImages={this.fetchImages} />\n        <Loader />\n        {this.state.isOpen === true && (\n          <Modal largeImageUrl={this.state.largeImageUrl} onClose={this.closeModal}/>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}